# Generated by Django 4.2.10 on 2025-07-23 09:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("pricing", "0003_alter_taxrate_options_alter_taxrateprofile_options_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Rule",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "client_id",
                    models.BigIntegerField(db_index=True, default=1, editable=False),
                ),
                (
                    "company_id",
                    models.BigIntegerField(
                        db_index=True,
                        default=1,
                        editable=False,
                        help_text="Company Identifier (within tenant). Default=1 for Phase 1.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.BigIntegerField(
                        blank=True, db_index=True, editable=False, null=True
                    ),
                ),
                (
                    "updated_by",
                    models.BigIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Stores basic custom field data as key-value pairs defined by admin settings.",
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        help_text="Defines the strict order of evaluation."
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this rule is active.",
                    ),
                ),
                (
                    "effective_from",
                    models.DateTimeField(help_text="When this rule becomes effective."),
                ),
                (
                    "effective_to",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this rule expires (if applicable).",
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "pricing_rules",
                "ordering": ["taxability_profile", "priority"],
            },
        ),
        migrations.CreateModel(
            name="RuleCondition",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "client_id",
                    models.BigIntegerField(db_index=True, default=1, editable=False),
                ),
                (
                    "company_id",
                    models.BigIntegerField(
                        db_index=True,
                        default=1,
                        editable=False,
                        help_text="Company Identifier (within tenant). Default=1 for Phase 1.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.BigIntegerField(
                        blank=True, db_index=True, editable=False, null=True
                    ),
                ),
                (
                    "updated_by",
                    models.BigIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Stores basic custom field data as key-value pairs defined by admin settings.",
                        null=True,
                    ),
                ),
                (
                    "attribute_name",
                    models.CharField(
                        help_text="A hardcoded key, e.g., 'transactional_price' or 'place_of_supply_context'.",
                        max_length=100,
                    ),
                ),
                (
                    "operator",
                    models.CharField(
                        choices=[
                            ("=", "Equals"),
                            ("!=", "Not Equals"),
                            (">", "Greater Than"),
                            (">=", "Greater Than or Equal"),
                            ("<", "Less Than"),
                            ("<=", "Less Than or Equal"),
                        ],
                        help_text="Comparison operator.",
                        max_length=2,
                    ),
                ),
                (
                    "condition_value",
                    models.CharField(
                        help_text="The value to compare against, e.g., '1000' or 'InterState'.",
                        max_length=1000,
                    ),
                ),
            ],
            options={
                "db_table": "pricing_rule_conditions",
                "ordering": ["rule_id", "id"],
            },
        ),
        migrations.CreateModel(
            name="RuleOutcome",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "client_id",
                    models.BigIntegerField(db_index=True, default=1, editable=False),
                ),
                (
                    "company_id",
                    models.BigIntegerField(
                        db_index=True,
                        default=1,
                        editable=False,
                        help_text="Company Identifier (within tenant). Default=1 for Phase 1.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.BigIntegerField(
                        blank=True, db_index=True, editable=False, null=True
                    ),
                ),
                (
                    "updated_by",
                    models.BigIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Stores basic custom field data as key-value pairs defined by admin settings.",
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "pricing_rule_outcomes",
                "ordering": ["rule", "id"],
            },
        ),
        migrations.RenameIndex(
            model_name="taxrate",
            new_name="pricing_tax_tax_typ_cb44ef_idx",
            old_name="pricing_tax_tax_typ_2591ae_idx",
        ),
        migrations.RenameIndex(
            model_name="taxrate",
            new_name="pricing_tax_country_9b1d7b_idx",
            old_name="pricing_tax_country_e3c22a_idx",
        ),
        migrations.RenameIndex(
            model_name="taxrate",
            new_name="pricing_tax_effecti_6e5c3e_idx",
            old_name="pricing_tax_effecti_f987c2_idx",
        ),
        migrations.AddField(
            model_name="taxrateprofile",
            name="is_active",
            field=models.BooleanField(
                db_index=True,
                default=True,
                help_text="Designates whether this tax profile is active.",
            ),
        ),
        migrations.AlterModelTable(
            name="taxrate",
            table="pricing_tax_rates",
        ),
        migrations.AlterModelTable(
            name="taxrateprofile",
            table="pricing_taxability_profiles",
        ),
        migrations.AddField(
            model_name="ruleoutcome",
            name="rule",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="outcomes",
                to="pricing.rule",
            ),
        ),
        migrations.AddField(
            model_name="ruleoutcome",
            name="tax_rate",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rule_outcomes",
                to="pricing.taxrate",
            ),
        ),
        migrations.AddField(
            model_name="rulecondition",
            name="rule",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="conditions",
                to="pricing.rule",
            ),
        ),
        migrations.AddField(
            model_name="rule",
            name="taxability_profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rules",
                to="pricing.taxrateprofile",
            ),
        ),
        migrations.AddIndex(
            model_name="rule",
            index=models.Index(
                fields=["taxability_profile", "is_active"],
                name="pricing_rul_taxabil_42750d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="rule",
            index=models.Index(
                fields=["effective_from", "effective_to"],
                name="pricing_rul_effecti_398bd1_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rule",
            unique_together={("taxability_profile", "priority")},
        ),
    ]
