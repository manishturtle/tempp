# Generated by Django 4.2.10 on 2025-07-14 07:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("customers", "0003_customergroupsellingchannel_segment_name"),
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomerGroupSellingChannelSubcategory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "client_id",
                    models.BigIntegerField(db_index=True, default=1, editable=False),
                ),
                (
                    "company_id",
                    models.BigIntegerField(
                        db_index=True,
                        default=1,
                        editable=False,
                        help_text="Company Identifier (within tenant). Default=1 for Phase 1.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.BigIntegerField(
                        blank=True, db_index=True, editable=False, null=True
                    ),
                ),
                (
                    "updated_by",
                    models.BigIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Stores basic custom field data as key-value pairs defined by admin settings.",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Whether this relationship is active",
                    ),
                ),
                (
                    "customer_group_selling_channel",
                    models.ForeignKey(
                        help_text="Reference to the CustomerGroupSellingChannel relationship",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategory_relationships",
                        to="customers.customergroupsellingchannel",
                    ),
                ),
                (
                    "subcategory",
                    models.ForeignKey(
                        help_text="Reference to the Subcategory",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_group_selling_channel_relationships",
                        to="products.subcategory",
                    ),
                ),
            ],
            options={
                "db_table": "products_customer_group_selling_channel_subcategory",
                "ordering": ["customer_group_selling_channel", "subcategory__name"],
            },
        ),
        migrations.CreateModel(
            name="CustomerGroupSellingChannelDivision",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "client_id",
                    models.BigIntegerField(db_index=True, default=1, editable=False),
                ),
                (
                    "company_id",
                    models.BigIntegerField(
                        db_index=True,
                        default=1,
                        editable=False,
                        help_text="Company Identifier (within tenant). Default=1 for Phase 1.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.BigIntegerField(
                        blank=True, db_index=True, editable=False, null=True
                    ),
                ),
                (
                    "updated_by",
                    models.BigIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Stores basic custom field data as key-value pairs defined by admin settings.",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Whether this relationship is active",
                    ),
                ),
                (
                    "customer_group_selling_channel",
                    models.ForeignKey(
                        help_text="Reference to the CustomerGroupSellingChannel relationship",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="division_relationships",
                        to="customers.customergroupsellingchannel",
                    ),
                ),
                (
                    "division",
                    models.ForeignKey(
                        help_text="Reference to the Division",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_group_selling_channel_relationships",
                        to="products.division",
                    ),
                ),
            ],
            options={
                "db_table": "products_customer_group_selling_channel_division",
                "ordering": ["customer_group_selling_channel", "division__name"],
            },
        ),
        migrations.CreateModel(
            name="CustomerGroupSellingChannelCategory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "client_id",
                    models.BigIntegerField(db_index=True, default=1, editable=False),
                ),
                (
                    "company_id",
                    models.BigIntegerField(
                        db_index=True,
                        default=1,
                        editable=False,
                        help_text="Company Identifier (within tenant). Default=1 for Phase 1.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.BigIntegerField(
                        blank=True, db_index=True, editable=False, null=True
                    ),
                ),
                (
                    "updated_by",
                    models.BigIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Stores basic custom field data as key-value pairs defined by admin settings.",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Whether this relationship is active",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Reference to the Category",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_group_selling_channel_relationships",
                        to="products.category",
                    ),
                ),
                (
                    "customer_group_selling_channel",
                    models.ForeignKey(
                        help_text="Reference to the CustomerGroupSellingChannel relationship",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category_relationships",
                        to="customers.customergroupsellingchannel",
                    ),
                ),
            ],
            options={
                "db_table": "products_customer_group_selling_channel_category",
                "ordering": ["customer_group_selling_channel", "category__name"],
            },
        ),
        migrations.AddField(
            model_name="category",
            name="customer_group_selling_channels",
            field=models.ManyToManyField(
                blank=True,
                help_text="Customer group and selling channel combinations that have access to this category",
                related_name="categories",
                through="products.CustomerGroupSellingChannelCategory",
                to="customers.customergroupsellingchannel",
            ),
        ),
        migrations.AddField(
            model_name="division",
            name="customer_group_selling_channels",
            field=models.ManyToManyField(
                blank=True,
                help_text="Customer group and selling channel combinations that have access to this division",
                related_name="divisions",
                through="products.CustomerGroupSellingChannelDivision",
                to="customers.customergroupsellingchannel",
            ),
        ),
        migrations.AddField(
            model_name="subcategory",
            name="customer_group_selling_channels",
            field=models.ManyToManyField(
                blank=True,
                help_text="Customer group and selling channel combinations that have access to this subcategory",
                related_name="subcategories",
                through="products.CustomerGroupSellingChannelSubcategory",
                to="customers.customergroupsellingchannel",
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchannelsubcategory",
            index=models.Index(
                fields=["customer_group_selling_channel", "is_active"],
                name="idx_cgscs_cgsc_active",
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchannelsubcategory",
            index=models.Index(
                fields=["subcategory", "is_active"], name="idx_cgscs_subcategory_active"
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchannelsubcategory",
            index=models.Index(
                fields=["customer_group_selling_channel", "subcategory", "is_active"],
                name="idx_cgscs_comp_query",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customergroupsellingchannelsubcategory",
            unique_together={("customer_group_selling_channel", "subcategory")},
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchanneldivision",
            index=models.Index(
                fields=["customer_group_selling_channel", "is_active"],
                name="idx_cgscd_cgsc_active",
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchanneldivision",
            index=models.Index(
                fields=["division", "is_active"], name="idx_cgscd_division_active"
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchanneldivision",
            index=models.Index(
                fields=["customer_group_selling_channel", "division", "is_active"],
                name="idx_cgscd_comp_query",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customergroupsellingchanneldivision",
            unique_together={("customer_group_selling_channel", "division")},
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchannelcategory",
            index=models.Index(
                fields=["customer_group_selling_channel", "is_active"],
                name="idx_cgscc_cgsc_active",
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchannelcategory",
            index=models.Index(
                fields=["category", "is_active"], name="idx_cgscc_category_active"
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchannelcategory",
            index=models.Index(
                fields=["customer_group_selling_channel", "category", "is_active"],
                name="idx_cgscc_comp_query",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customergroupsellingchannelcategory",
            unique_together={("customer_group_selling_channel", "category")},
        ),
    ]
