# Generated by Django 4.2.10 on 2025-07-14 07:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("customers", "0003_customergroupsellingchannel_segment_name"),
        ("products", "0002_customergroupsellingchannelsubcategory_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomerGroupSellingChannelProduct",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "client_id",
                    models.BigIntegerField(db_index=True, default=1, editable=False),
                ),
                (
                    "company_id",
                    models.BigIntegerField(
                        db_index=True,
                        default=1,
                        editable=False,
                        help_text="Company Identifier (within tenant). Default=1 for Phase 1.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.BigIntegerField(
                        blank=True, db_index=True, editable=False, null=True
                    ),
                ),
                (
                    "updated_by",
                    models.BigIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Stores basic custom field data as key-value pairs defined by admin settings.",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Whether this relationship is active",
                    ),
                ),
                (
                    "customer_group_selling_channel",
                    models.ForeignKey(
                        help_text="Reference to the CustomerGroupSellingChannel relationship",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_relationships",
                        to="customers.customergroupsellingchannel",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Reference to the Product",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_group_selling_channel_relationships",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "db_table": "products_customer_group_selling_channel_product",
                "ordering": ["customer_group_selling_channel", "product__name"],
            },
        ),
        migrations.AddField(
            model_name="product",
            name="customer_group_selling_channels",
            field=models.ManyToManyField(
                blank=True,
                help_text="Customer group and selling channel combinations that have access to this product",
                related_name="products",
                through="products.CustomerGroupSellingChannelProduct",
                to="customers.customergroupsellingchannel",
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchannelproduct",
            index=models.Index(
                fields=["customer_group_selling_channel", "is_active"],
                name="idx_cgscp_cgsc_active",
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchannelproduct",
            index=models.Index(
                fields=["product", "is_active"], name="idx_cgscp_product_active"
            ),
        ),
        migrations.AddIndex(
            model_name="customergroupsellingchannelproduct",
            index=models.Index(
                fields=["customer_group_selling_channel", "product", "is_active"],
                name="idx_cgscp_comp_query",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customergroupsellingchannelproduct",
            unique_together={("customer_group_selling_channel", "product")},
        ),
    ]
