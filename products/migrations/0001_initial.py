# Generated by Django 4.2.10 on 2025-07-09 15:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("attributes", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("pricing", "0001_initial"),
        ("shared", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External client identifier (fixed value)",
                    ),
                ),
                (
                    "company_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External company identifier (fixed value)",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
                ("image_alt_text", models.CharField(blank=True, max_length=255)),
                (
                    "tax_inclusive",
                    models.BooleanField(
                        default=False,
                        help_text="Whether prices for products in this category include tax by default",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "default_tax_rate_profile",
                    models.ForeignKey(
                        help_text="Default tax rate profile for products in this category",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="default_for_categories",
                        to="pricing.taxrateprofile",
                    ),
                ),
            ],
            options={
                "db_table": "products_category",
                "ordering": ["division__name", "sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Division",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External client identifier (fixed value)",
                    ),
                ),
                (
                    "company_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External company identifier (fixed value)",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="divisions/"),
                ),
                ("image_alt_text", models.CharField(blank=True, max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "low_stock_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Threshold at which product is considered low in stock",
                    ),
                ),
                (
                    "min_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Minimum allowed stock count"
                    ),
                ),
                (
                    "max_count",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum allowed stock count (optional)",
                        null=True,
                    ),
                ),
                (
                    "active_from_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date from which this product is available",
                        null=True,
                    ),
                ),
                (
                    "active_to_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date until which this product is available",
                        null=True,
                    ),
                ),
                (
                    "custom_label",
                    models.CharField(
                        blank=True,
                        help_text="Optional custom label for internal use",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cost price of the product",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("client_id", models.IntegerField(default=1)),
                ("company_id", models.IntegerField(default=1)),
                (
                    "product_type",
                    models.CharField(
                        choices=[
                            ("REGULAR", "Regular Product"),
                            ("PARENT", "Parent Product (with Variants)"),
                            ("KIT", "Kit/Bundle Product"),
                        ],
                        default="REGULAR",
                        max_length=10,
                    ),
                ),
                (
                    "publication_status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ACTIVE", "Active"),
                            ("ARCHIVED", "Archived"),
                        ],
                        db_index=True,
                        default="DRAFT",
                        help_text="Current publication status of the product",
                        max_length=10,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255)),
                (
                    "sku",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("short_description", models.TextField(blank=True)),
                ("is_tax_exempt", models.BooleanField(default=False)),
                (
                    "display_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "compare_at_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original price for comparison (e.g., for sale items)",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("allow_reviews", models.BooleanField(default=True)),
                ("inventory_tracking_enabled", models.BooleanField(default=True)),
                ("backorders_allowed", models.BooleanField(default=False)),
                ("quantity_on_hand", models.IntegerField(default=0)),
                (
                    "is_serialized",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this product has serial numbers",
                    ),
                ),
                (
                    "is_lotted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this product is tracked by lot/batch numbers",
                    ),
                ),
                (
                    "pre_order_available",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this product can be pre-ordered",
                    ),
                ),
                (
                    "pre_order_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when pre-ordered items will be available",
                        null=True,
                    ),
                ),
                ("seo_title", models.CharField(blank=True, max_length=70)),
                ("seo_description", models.CharField(blank=True, max_length=160)),
                ("seo_keywords", models.CharField(blank=True, max_length=255)),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        help_text="Product tags stored as a JSON array of strings",
                        null=True,
                    ),
                ),
                (
                    "faqs",
                    models.JSONField(
                        blank=True, help_text="Product FAQs stored as JSON", null=True
                    ),
                ),
                (
                    "key_features",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text='List of key features for the product stored as a JSON array of strings. Example: ["Feature 1", "Feature 2"]',
                        null=True,
                    ),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Custom product attributes stored as JSON. Can include any additional product data.",
                        null=True,
                    ),
                ),
                (
                    "workflow_flow_id",
                    models.IntegerField(
                        blank=True,
                        db_index=True,
                        help_text="Workflow flow ID for this product",
                        null=True,
                    ),
                ),
                (
                    "attribute_groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Groups whose attributes should be initially displayed",
                        related_name="products",
                        to="attributes.attributegroup",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="products.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "currency_code",
                    models.ForeignKey(
                        help_text="Currency for product pricing",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="shared.currency",
                    ),
                ),
                (
                    "default_tax_rate_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="default_for_products",
                        to="pricing.taxrateprofile",
                    ),
                ),
                (
                    "division",
                    models.ForeignKey(
                        help_text="Division this product belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="products.division",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("client_id", models.IntegerField(default=1)),
                ("company_id", models.IntegerField(default=1)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="products/"),
                ),
                ("alt_text", models.CharField(blank=True, max_length=255)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("is_default", models.BooleanField(default=False)),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "ordering": ["product", "variant", "sort_order"],
            },
        ),
        migrations.CreateModel(
            name="ProductStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External client identifier (fixed value)",
                    ),
                ),
                (
                    "company_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External company identifier (fixed value)",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description of the product status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this status is active and available for use",
                    ),
                ),
                (
                    "is_orderable",
                    models.BooleanField(
                        default=True,
                        help_text="Can products with this status be ordered?",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "unique_together": {("client_id", "name")},
            },
        ),
        migrations.CreateModel(
            name="UnitOfMeasure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External client identifier (fixed value)",
                    ),
                ),
                (
                    "company_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External company identifier (fixed value)",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("symbol", models.CharField(max_length=10)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "unit_type",
                    models.CharField(
                        choices=[
                            ("COUNTABLE", "Countable"),
                            ("MEASURABLE", "Measurable"),
                        ],
                        default="COUNTABLE",
                        help_text="Determines if the unit is typically counted in whole numbers or measured with decimal values",
                        max_length=10,
                    ),
                ),
                (
                    "associated_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Numeric value associated with this unit of measure",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "unique_together": {("client_id", "name"), ("client_id", "symbol")},
            },
        ),
        migrations.CreateModel(
            name="Subcategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External client identifier (fixed value)",
                    ),
                ),
                (
                    "company_id",
                    models.IntegerField(
                        default=1,
                        editable=False,
                        help_text="External company identifier (fixed value)",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="subcategories/"
                    ),
                ),
                ("image_alt_text", models.CharField(blank=True, max_length=255)),
                (
                    "workflow_flow_id",
                    models.IntegerField(
                        blank=True,
                        help_text="Future foreign key to workflow flow",
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="products.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "unique_together": {("client_id", "category", "name")},
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("client_id", models.IntegerField(default=1)),
                ("company_id", models.IntegerField(default=1)),
                ("sku", models.CharField(max_length=100)),
                ("display_price", models.DecimalField(decimal_places=2, max_digits=12)),
                ("is_active", models.BooleanField(default=True)),
                ("quantity_on_hand", models.IntegerField(default=0)),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional variant-specific default image.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="variant_default_image",
                        to="products.productimage",
                    ),
                ),
                (
                    "options",
                    models.ManyToManyField(
                        help_text="Attribute options defining this variant (e.g., Red, Small)",
                        related_name="variants",
                        to="attributes.attributeoption",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        limit_choices_to={"product_type": "PARENT"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="products.product",
                    ),
                ),
                (
                    "status_override",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional override of the parent product status.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="variant_statuses",
                        to="products.productstatus",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Variant",
                "verbose_name_plural": "Product Variants",
                "ordering": ["product", "sku"],
                "unique_together": {("client_id", "sku")},
            },
        ),
        migrations.AddField(
            model_name="productimage",
            name="variant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="products.productvariant",
            ),
        ),
        migrations.CreateModel(
            name="ProductAttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("client_id", models.IntegerField(default=1)),
                ("company_id", models.IntegerField(default=1)),
                ("value_text", models.TextField(blank=True, null=True)),
                (
                    "value_number",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                ("value_boolean", models.BooleanField(blank=True, null=True)),
                ("value_date", models.DateField(blank=True, null=True)),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_values",
                        to="attributes.attribute",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attribute_values",
                        to="products.product",
                    ),
                ),
                (
                    "value_option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_values_single",
                        to="attributes.attributeoption",
                    ),
                ),
            ],
            options={
                "ordering": ["product", "attribute"],
            },
        ),
        migrations.CreateModel(
            name="ProductAttributeMultiValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attribute_option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_values_multi",
                        to="attributes.attributeoption",
                    ),
                ),
                (
                    "product_attribute_value",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="multi_values",
                        to="products.productattributevalue",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="productstatus",
            field=models.ForeignKey(
                help_text="Current status of this product",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products",
                to="products.productstatus",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="subcategory",
            field=models.ForeignKey(
                blank=True,
                help_text="Subcategory this product belongs to",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products",
                to="products.subcategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="uom",
            field=models.ForeignKey(
                help_text="Unit of measure for this product",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products",
                to="products.unitofmeasure",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="variant_defining_attributes",
            field=models.ManyToManyField(
                blank=True,
                help_text="Attributes used to define variants for this product",
                limit_choices_to={"use_for_variants": True},
                related_name="defines_variants_for",
                to="attributes.attribute",
            ),
        ),
        migrations.CreateModel(
            name="KitComponent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("client_id", models.IntegerField(default=1)),
                ("company_id", models.IntegerField(default=1)),
                ("quantity", models.PositiveIntegerField(default=1)),
                (
                    "is_swappable_group",
                    models.BooleanField(
                        default=False,
                        help_text="If True, component_product MUST be a PARENT product, and its variants are the options.",
                    ),
                ),
                (
                    "component_product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Link to a REGULAR product component OR the PARENT product for a swappable group.",
                        limit_choices_to={"product_type": "REGULAR"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="products.product",
                    ),
                ),
                (
                    "component_variant",
                    models.ForeignKey(
                        blank=True,
                        help_text="Link to a specific VARIANT product component.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="products.productvariant",
                    ),
                ),
                (
                    "kit_product",
                    models.ForeignKey(
                        help_text="The KIT product that contains this component",
                        limit_choices_to={"product_type": "KIT"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kit_components",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kit Component",
                "verbose_name_plural": "Kit Components",
                "ordering": ["kit_product", "id"],
            },
        ),
        migrations.AddField(
            model_name="category",
            name="division",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="categories",
                to="products.division",
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddConstraint(
            model_name="productimage",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("product__isnull", False), ("variant__isnull", True)),
                    models.Q(("product__isnull", True), ("variant__isnull", False)),
                    _connector="OR",
                ),
                name="product_xor_variant",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productattributevalue",
            unique_together={("client_id", "product", "attribute")},
        ),
        migrations.AlterUniqueTogether(
            name="productattributemultivalue",
            unique_together={("product_attribute_value", "attribute_option")},
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together={("client_id", "slug")},
        ),
        migrations.AddConstraint(
            model_name="kitcomponent",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("component_product__isnull", False),
                        ("component_variant__isnull", True),
                    ),
                    models.Q(
                        ("component_product__isnull", True),
                        ("component_variant__isnull", False),
                    ),
                    _connector="OR",
                ),
                name="component_product_or_variant_set",
            ),
        ),
        migrations.AddConstraint(
            model_name="kitcomponent",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("is_swappable_group", False),
                    ("component_product__isnull", False),
                    _connector="OR",
                ),
                name="swappable_requires_component_product",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="division",
            unique_together={("client_id", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="category",
            unique_together={("client_id", "division", "name")},
        ),
    ]
